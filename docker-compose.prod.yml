version: "3.8"
services:
  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    image: docker.io/pbbg/database:master
    container_name: database
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
      - SERVICE_TAGS=dev
      - SERVICE_NAME=database
    volumes:
      - ./database:/docker-entrypoint-initdb.d
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: docker.io/pbbg/backend:master
    container_name: backend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: docker.io/pbbg/frontend:master
    container_name: frontend
  proxy:
    build:
      context: ./proxy/prod
      dockerfile: Dockerfile
    image: docker.io/pbbg/proxy:master
    container_name: proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  certbot:
    build:
      context: ./certbot
      dockerfile: Dockerfile
    image: docker.io/pbbg/certbot:release
    container_name: certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

