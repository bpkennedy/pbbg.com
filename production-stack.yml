version: "3.8"
services:
  database:
    image: docker.io/pbbg/database:release
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
        failure_action: rollback
        delay: 5s
      rollback_config:
        parallelism: 0
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
  backend:
    image: docker.io/pbbg/backend:release
    environment:
      - APP_URL=${APP_URL}
      - APP_NAME=${APP_NAME}
      - APP_KEY=${APP_KEY}
      - LOG_CHANNEL=${LOG_CHANNEL}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - APP_ENV=prod
      - APP_DEBUG=false
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
        failure_action: rollback
        delay: 5s
      rollback_config:
        parallelism: 0
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/tests"]
  frontend:
    image: docker.io/pbbg/frontend:release
    deploy:
      replicas: 1
      update_config:
        parallelism: 0
        failure_action: rollback
        delay: 5s
      rollback_config:
        parallelism: 0
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
  proxy:
    image: docker.io/pbbg/proxy:release
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs-data/:/data/letsencrypt/
      - /etc/letsencrypt/:/etc/letsencrypt/
    deploy:
      mode: 'global'
      update_config:
        parallelism: 0
        failure_action: rollback
        delay: 5s
      rollback_config:
        parallelism: 0
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
